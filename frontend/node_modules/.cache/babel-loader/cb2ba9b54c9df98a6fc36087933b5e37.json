{"ast":null,"code":"import _slicedToArray from \"/Users/theresaulwahn/Desktop/myday/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/theresaulwahn/Desktop/myday/frontend/src/components/MyDayForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport \"./mydayform.css\";\nconst url = \"http://localhost:9000\";\nconst feelingsChecked = [false, false, false, false, false, false, false, false]; // const feeling = ['I took a walk', 'I went to the gym']\n// const feeling = ['I feel worried', 'I feel tired']\n// const feeling = ['I got a compliment', 'I gave someone a hug']\n\nexport const MyDayForm = props => {\n  const feeling = props.feelings;\n\n  const _useParams = useParams(),\n        myDay2 = _useParams.myDay2;\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        questions1 = _useState2[0],\n        setQuestions1 = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        questions2 = _useState4[0],\n        setQuestions2 = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        questions3 = _useState6[0],\n        setQuestions3 = _useState6[1];\n\n  const _useState7 = useState(),\n        _useState8 = _slicedToArray(_useState7, 2),\n        questions4 = _useState8[0],\n        setQuestions4 = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        name = _useState10[0],\n        setName = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        photo = _useState12[0],\n        setPhoto = _useState12[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        submitted = _useState14[0],\n        setSubmitted = _useState14[1]; // const [feeling, setFeeling] = useState(\"\")\n\n\n  const _useState15 = useState(\"\"),\n        _useState16 = _slicedToArray(_useState15, 2),\n        message = _useState16[0],\n        setMessage = _useState16[1];\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        feeling1: feelingsChecked[0],\n        feeling2: feelingsChecked[1],\n        messagePeople: questions1,\n        messageGrateful: questions2\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(json => {\n      // setReflection(json)\n      console.log(json); // props.onFormSubmit(message)\n\n      setMessage(\"\");\n    });\n  };\n\n  console.log(\"fredag den 13\");\n  return React.createElement(\"section\", {\n    className: \"formSection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"backLink\",\n    to: `/`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    className: \"backLinkImg\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 30 30\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    d: \"M27 14.5C27 7.596441 21.4035594 2 14.5 2S2 7.596441 2 14.5 7.5964406 27 14.5 27 27 21.403559 27 14.5zm-19.3388348-.353553l7.4852814-7.485282c.1952622-.195262.5118446-.195262.7071068 0l2.1213203 2.121321c.1952622.195262.1952622.511844 0 .707106L12.9644661 14.5l5.0104076 5.010408c.1952622.195262.1952622.511844 0 .707106l-2.1213203 2.121321c-.1952622.195262-.5118446.195262-.7071068 0l-7.4852814-7.485282c-.19799-.19799-.197989-.509117 0-.707106z\",\n    fill: \"#fff\",\n    fillRule: \"evenodd\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Go back\")), React.createElement(\"div\", {\n    className: \"header2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Time to reflect\")), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: event => event.preventDefault(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"boxes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"questions1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, feeling.map((item, index) => React.createElement(\"label\", {\n    key: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"questions1\",\n    type: \"checkbox\",\n    value: item,\n    onChange: () => feelingsChecked[index] = true // checked={feeling === group}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), item)))), React.createElement(\"section\", {\n    className: \"formInputSection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Two people who I admire\"), React.createElement(\"textarea\", {\n    rows: \"3\",\n    onChange: event => setQuestions1(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"form-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, feeling.length, \" / 140\")), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Two things I'm grateful for\"), React.createElement(\"textarea\", {\n    rows: \"3\",\n    onChange: event => setQuestions2(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"form-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, message.length, \" / 140\")), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Two things I look forward to\"), React.createElement(\"textarea\", {\n    rows: \"3\",\n    onChange: event => setMessage(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"form-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, message.length, \" / 140\")), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Reflections\"), React.createElement(\"textarea\", {\n    rows: \"3\",\n    onChange: event => setMessage(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"form-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, message.length, \" / 140\"))), React.createElement(\"button\", {\n    className: \"submitBtn\",\n    onClick: event => handleSubmit(event),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"SUBMIT\")), \")}\");\n};","map":{"version":3,"sources":["/Users/theresaulwahn/Desktop/myday/frontend/src/components/MyDayForm.js"],"names":["React","useState","useEffect","useParams","Link","url","feelingsChecked","MyDayForm","props","feeling","feelings","myDay2","questions1","setQuestions1","questions2","setQuestions2","questions3","setQuestions3","questions4","setQuestions4","name","setName","photo","setPhoto","submitted","setSubmitted","message","setMessage","handleSubmit","event","preventDefault","fetch","method","body","JSON","stringify","feeling1","feeling2","messagePeople","messageGrateful","headers","then","res","json","console","log","map","item","index","target","value","length"],"mappings":"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","sourcesContent":[" \nimport React, { useState, useEffect } from \"react\"\nimport { useParams } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\nimport \"./mydayform.css\"\n\nconst url =\"http://localhost:9000\"\n\nconst feelingsChecked = [false, false, false, false, false, false, false, false]\n// const feeling = ['I took a walk', 'I went to the gym']\n// const feeling = ['I feel worried', 'I feel tired']\n// const feeling = ['I got a compliment', 'I gave someone a hug']\n\n\nexport const MyDayForm = props => {\n  const feeling = props.feelings\n  const { myDay2 } = useParams()\n  const [questions1, setQuestions1] = useState()\n  const [questions2, setQuestions2] = useState()\n  const [questions3, setQuestions3] = useState()\n  const [questions4, setQuestions4] = useState()\n  const [name, setName] = useState(\"\");\n  const [photo, setPhoto] = useState([])\n  const [submitted, setSubmitted] = useState(false)\n  \n  // const [feeling, setFeeling] = useState(\"\")\n  const [message, setMessage] = useState(\"\")\n  const handleSubmit = event => {\n    event.preventDefault()\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        feeling1: feelingsChecked[0],\n        feeling2: feelingsChecked[1],\n        messagePeople:questions1,\n        messageGrateful: questions2\n      }),\n      headers: { \"Content-Type\": \"application/json\" }\n    })\n    .then((res) => res.json())\n        .then((json) => {\n            // setReflection(json)\n            console.log(json)\n    // props.onFormSubmit(message)\n    setMessage(\"\")\n    })}  \nconsole.log(\"fredag den 13\")\n\n  return ( \n    <section className='formSection'>\n      <Link className=\"backLink\" to={`/`}>\n        <svg className=\"backLinkImg\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 30 30\">\n          <path d=\"M27 14.5C27 7.596441 21.4035594 2 14.5 2S2 7.596441 2 14.5 7.5964406 27 14.5 27 27 21.403559 27 14.5zm-19.3388348-.353553l7.4852814-7.485282c.1952622-.195262.5118446-.195262.7071068 0l2.1213203 2.121321c.1952622.195262.1952622.511844 0 .707106L12.9644661 14.5l5.0104076 5.010408c.1952622.195262.1952622.511844 0 .707106l-2.1213203 2.121321c-.1952622.195262-.5118446.195262-.7071068 0l-7.4852814-7.485282c-.19799-.19799-.197989-.509117 0-.707106z\" fill=\"#fff\" fillRule=\"evenodd\"></path></svg>\n        <p>Go back</p>\n      </Link>\n      <div className=\"header2\">\n        <h1>Time to reflect</h1>\n      </div> \n    \n      {/* {!submitted && ( */}\n\n        <form className='form' onSubmit={event => event.preventDefault()}>\n        <section className=\"boxes\">\n          <div className=\"questions1\">\n            {feeling.map((item, index) => (\n              <label key={item}>\n                <input className=\"questions1\"\n                  type=\"checkbox\"\n                  value={item}\n                  onChange={() => feelingsChecked[index]=true}\n                  // checked={feeling === group}\n                />\n                {item}\n              </label>\n            ))}\n          </div>\n          {/* <div className=\"questions2\">\n            {feeling.map(group => (\n              <label key={group}>\n                <input className=\"questions2\"\n                  type=\"checkbox\"\n                  value={group}\n                  onChange={event => setQuestions2(event.target.value)}\n                  checked={questions2 === group}\n                />\n                {group}\n              </label>\n            ))}\n          </div>\n          <div className=\"questions3\">\n            {questionsGroup3.map(group => (\n              <label key={group}>\n                <input className=\"questions3\"\n                  type=\"checkbox\"\n                  value={group}\n                  onChange={event => setQuestions3(event.target.value)}\n                  checked={questions3 === group}\n                />\n                {group}\n              </label>\n            ))}\n          </div>\n          <div className=\"questions4\">\n            {questionsGroup4.map(group => (\n              <label key={group}>\n                <input className=\"questions4\"\n                  type=\"checkbox\"\n                  value={group}\n                  onChange={event => setQuestions4(event.target.value)}\n                  checked={questions4 === group}\n                />\n                {group}\n              </label>\n            ))}\n          </div> */}\n        </section>\n          <section className=\"formInputSection\">\n          <h4>Two people who I admire</h4>\n          <textarea\n            rows='3'\n            onChange={event => setQuestions1(event.target.value)}\n          ></textarea>\n          <div className='form-footer'>\n            <p>{feeling.length} / 140</p>\n              {/* <button \n                className='form-button'\n                type='submit'\n                onClick={handleSubmit}\n                disabled={feeling.length < 6 || feeling.length > 140 ? true : false}\n              >\n                <p>Save</p>\n              </button> */}\n          </div> \n          \n          <h4>Two things I'm grateful for</h4>\n          <textarea\n            rows='3'\n            onChange={event => setQuestions2(event.target.value)}\n          ></textarea>\n          <div className='form-footer'>\n            <p>{message.length} / 140</p>\n              {/* <button \n                className='form-button'\n                type='submit'\n                onClick={handleSubmit}\n                disabled={message.length < 6 || message.length > 140 ? true : false}\n              >\n                <p>Save</p>\n              </button> */}\n          </div>\n\n          <h4>Two things I look forward to</h4>\n          <textarea\n            rows='3'\n            onChange={event => setMessage(event.target.value)}\n          ></textarea>\n          <div className='form-footer'>\n            <p>{message.length} / 140</p>\n              {/* <button \n                className='form-button'\n                type='submit'\n                onClick={handleSubmit}\n                disabled={message.length < 6 || message.length > 140 ? true : false}\n              >\n                <p>Save</p>\n              </button> */}\n          </div> \n\n            {/* console.log(feeling) */}\n          <h4>Reflections</h4>\n          <textarea\n            rows='3'\n            onChange={event => setMessage(event.target.value)}\n          ></textarea>\n          <div className='form-footer'>\n            <p>{message.length} / 140</p>\n          </div>\n        </section>\n        {/* <button \n            className='form-button'\n            type='submit'\n            onClick={handleSubmit}\n            disabled={message.length < 6 || message.length > 140 ? true : false}\n          >\n              <p>Save</p>\n          </button> */}\n        <button className=\"submitBtn\"\n          onClick={(event) => handleSubmit(event)}\n          >SUBMIT\n        </button>\n      </form>\n    )}\n    {/* {submitted && <Reflection feeling={feeling} questions1={questions1} />} */}\n    {/* {submitted && <Summary name={name} adventures={adventures} destinations={destinations} mostImportant={mostImportant} companionGroup={companionGroup} />} */}\n    </section>\n  )\n}"]},"metadata":{},"sourceType":"module"}