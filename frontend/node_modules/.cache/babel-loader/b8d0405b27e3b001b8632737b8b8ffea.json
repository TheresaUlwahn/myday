{"ast":null,"code":"import _slicedToArray from \"/Users/theresaulwahn/Desktop/myday/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/theresaulwahn/Desktop/myday/frontend/src/components/MyDayForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport \"./mydayform.css\";\nconst url = \"http://localhost:9000\"; // const url =\"https://myday-reflection.herokuapp.com/\"\n\nconst feelingsChecked = [false, false, false, false, false, false];\nexport const MyDayForm = props => {\n  const feeling = props.feelings;\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        questions1 = _useState2[0],\n        setQuestions1 = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        questions2 = _useState4[0],\n        setQuestions2 = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        questions3 = _useState6[0],\n        setQuestions3 = _useState6[1];\n\n  const _useState7 = useState(),\n        _useState8 = _slicedToArray(_useState7, 2),\n        questions4 = _useState8[0],\n        setQuestions4 = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        submitted = _useState10[0],\n        setSubmitted = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        message = _useState12[0],\n        setMessage = _useState12[1];\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        feeling1: feelingsChecked[0],\n        feeling2: feelingsChecked[1],\n        feeling3: feelingsChecked[2],\n        feeling4: feelingsChecked[3],\n        feeling5: feelingsChecked[4],\n        feeling6: feelingsChecked[5],\n        messagePeople: questions1,\n        messageGrateful: questions2,\n        messageLookForward: questions3,\n        messageReflections: questions4\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(json => {\n      console.log(json);\n      setMessage(\"\");\n      setSubmitted(true);\n      window.history.back();\n    });\n  };\n\n  return React.createElement(\"section\", {\n    className: \"formSection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Time to reflect\")), submitted && React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"You're reflection was saved!\"), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: event => event.preventDefault(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"boxes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"questions1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, feeling.map((item, index) => React.createElement(\"label\", {\n    className: \"checkboxLabel\",\n    key: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"questions1\",\n    type: \"checkbox\",\n    value: item,\n    onChange: () => feelingsChecked[index] = true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), item)))), React.createElement(\"section\", {\n    className: \"formInputSection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Two people who I admire\"), React.createElement(\"textarea\", {\n    rows: \"3\",\n    onChange: event => setQuestions1(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"I'm grateful for\"), React.createElement(\"textarea\", {\n    rows: \"3\",\n    onChange: event => setQuestions2(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"I look forward to\"), React.createElement(\"textarea\", {\n    rows: \"3\",\n    onChange: event => setQuestions3(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Reflections\"), React.createElement(\"textarea\", {\n    rows: \"3\",\n    onChange: event => setQuestions4(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"submitBtn\",\n    onClick: event => handleSubmit(event),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Submit / Back\")));\n};","map":{"version":3,"sources":["/Users/theresaulwahn/Desktop/myday/frontend/src/components/MyDayForm.js"],"names":["React","useState","useEffect","useParams","url","feelingsChecked","MyDayForm","props","feeling","feelings","questions1","setQuestions1","questions2","setQuestions2","questions3","setQuestions3","questions4","setQuestions4","submitted","setSubmitted","message","setMessage","handleSubmit","event","preventDefault","fetch","method","body","JSON","stringify","feeling1","feeling2","feeling3","feeling4","feeling5","feeling6","messagePeople","messageGrateful","messageLookForward","messageReflections","headers","then","res","json","console","log","window","history","back","map","item","index","target","value"],"mappings":"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","sourcesContent":[" \nimport React, { useState, useEffect } from \"react\"\nimport { useParams } from 'react-router-dom'\nimport \"./mydayform.css\"\n\nconst url =\"http://localhost:9000\"\n// const url =\"https://myday-reflection.herokuapp.com/\"\n\nconst feelingsChecked = [false, false, false, false, false, false]\n\nexport const MyDayForm = props => {\n  const feeling = props.feelings\n  const [questions1, setQuestions1] = useState()\n  const [questions2, setQuestions2] = useState()\n  const [questions3, setQuestions3] = useState()\n  const [questions4, setQuestions4] = useState()\n  const [submitted, setSubmitted] = useState(false)\n  const [message, setMessage] = useState(\"\")\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        feeling1: feelingsChecked[0],\n        feeling2: feelingsChecked[1],\n        feeling3: feelingsChecked[2],\n        feeling4: feelingsChecked[3],\n        feeling5: feelingsChecked[4],\n        feeling6: feelingsChecked[5],\n        messagePeople: questions1,\n        messageGrateful: questions2,\n        messageLookForward: questions3,\n        messageReflections: questions4\n      }),\n      headers: { \"Content-Type\": \"application/json\" }\n    })\n    .then((res) => res.json())\n        .then((json) => {\n            console.log(json)\n    setMessage(\"\")\n    setSubmitted(true)\n    window.history.back();\n    })}  \n\n  return ( \n    <section className='formSection'>\n      <div className=\"header2\">\n        <h1>Time to reflect</h1>\n      </div>\n      {submitted && <h1>You're reflection was saved!</h1>}\n        <form className='form' onSubmit={event => event.preventDefault()}>\n          <section className=\"boxes\">\n            <div className=\"questions1\">\n              {feeling.map((item, index) => (\n                <label className=\"checkboxLabel\" key={item}>\n                  <input className=\"questions1\"\n                    type=\"checkbox\"\n                    value={item}\n                    onChange={() => feelingsChecked[index]=true}\n                  />\n                  {item}\n                </label>\n              ))}\n            </div>    \n          </section>\n          <section className=\"formInputSection\">\n            <h4>Two people who I admire</h4>\n            <textarea\n              rows='3'\n              onChange={event => setQuestions1(event.target.value)}\n              ></textarea> \n            <h4>I'm grateful for</h4>\n              <textarea\n              rows='3'\n              onChange={event => setQuestions2(event.target.value)}\n              ></textarea>\n            <h4>I look forward to</h4>\n              <textarea\n              rows='3'\n              onChange={event => setQuestions3(event.target.value)}\n              ></textarea>\n            <h4>Reflections</h4>\n              <textarea\n              rows='3'\n              onChange={event => setQuestions4(event.target.value)}\n              ></textarea> \n            </section>\n          <button className=\"submitBtn\"\n            onClick={(event) => handleSubmit(event)}\n            >Submit / Back\n          </button>\n      </form>\n    </section>\n  )\n}"]},"metadata":{},"sourceType":"module"}