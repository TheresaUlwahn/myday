{
  "{\"sourceRoot\":\"/Users/theresaulwahn/Desktop/myday/backend\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/theresaulwahn/Desktop/myday/backend\",\"filename\":\"/Users/theresaulwahn/Desktop/myday/backend/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/theresaulwahn/Desktop/myday/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/theresaulwahn/Desktop/myday/backend",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/theresaulwahn/Desktop/myday/backend",
      "filename": "/Users/theresaulwahn/Desktop/myday/backend/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/theresaulwahn/Desktop/myday/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/theresaulwahn/Desktop/myday/backend/server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/theresaulwahn/Desktop/myday/backend/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/theresaulwahn/Desktop/myday/backend",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// const mongoUrl = process.env.MONGO_URL || 'mongodb://localhost/myday'\nvar mongoUrl = process.env.MONGO_URL || 'mongodb://localhost/myday';\n\n_mongoose[\"default\"].connect(mongoUrl, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\n_mongoose[\"default\"].Promise = Promise;\n\nvar Reflection = _mongoose[\"default\"].model('Reflection', {\n  feeling1: {\n    type: String\n  },\n  feeling2: {\n    type: String\n  },\n  feeling3: {\n    type: String\n  },\n  feeling4: {\n    type: String\n  },\n  feeling5: {\n    type: String\n  },\n  feeling6: {\n    type: String\n  },\n  messagePeople: {\n    type: String,\n    minlength: 1,\n    maxlength: 140\n  },\n  messageGrateful: {\n    type: String,\n    minlength: 1,\n    maxlength: 140\n  },\n  messageLookForward: {\n    type: String,\n    minlength: 1,\n    maxlength: 140\n  },\n  messageReflections: {\n    type: String,\n    minlength: 1,\n    maxlength: 140\n  },\n  createdAt: {\n    type: Date,\n    \"default\": Date.now\n  }\n});\n\nvar port = process.env.PORT || 9000; // const port = process.env.PORT || 8080\n\nvar app = (0, _express[\"default\"])();\napp.use((0, _cors[\"default\"])());\napp.use(_bodyParser[\"default\"].json());\napp.get('/',\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var reflections;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Reflection.find().sort({\n              createdAt: 'desc'\n            }).limit(140).exec();\n\n          case 2:\n            reflections = _context.sent;\n            res.json(reflections);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.post('/',\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var message, reflection, savedReflection;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            message = req.body.message;\n            console.log(req.body);\n            reflection = new Reflection(req.body);\n            _context2.prev = 3;\n            _context2.next = 6;\n            return reflection.save();\n\n          case 6:\n            savedReflection = _context2.sent;\n            res.status(201).json(savedReflection);\n            _context2.next = 13;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](3);\n            res.status(400).json({\n              message: 'Could not save your reflection',\n              error: _context2.t0.errors\n            });\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[3, 10]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.get('/reflections/:id',\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    var reflection;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return Reflection.findById(req.params.id);\n\n          case 2:\n            reflection = _context3.sent;\n\n            if (reflection) {\n              res.json(reflection);\n            } else {\n              res.status(404).json({\n                error: 'Reflection not found'\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\napp.listen(port, function () {\n  console.log(\"Server running on http://localhost:\".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJtb25nb1VybCIsInByb2Nlc3MiLCJlbnYiLCJNT05HT19VUkwiLCJtb25nb29zZSIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJQcm9taXNlIiwiUmVmbGVjdGlvbiIsIm1vZGVsIiwiZmVlbGluZzEiLCJ0eXBlIiwiU3RyaW5nIiwiZmVlbGluZzIiLCJmZWVsaW5nMyIsImZlZWxpbmc0IiwiZmVlbGluZzUiLCJmZWVsaW5nNiIsIm1lc3NhZ2VQZW9wbGUiLCJtaW5sZW5ndGgiLCJtYXhsZW5ndGgiLCJtZXNzYWdlR3JhdGVmdWwiLCJtZXNzYWdlTG9va0ZvcndhcmQiLCJtZXNzYWdlUmVmbGVjdGlvbnMiLCJjcmVhdGVkQXQiLCJEYXRlIiwibm93IiwicG9ydCIsIlBPUlQiLCJhcHAiLCJ1c2UiLCJib2R5UGFyc2VyIiwianNvbiIsImdldCIsInJlcSIsInJlcyIsImZpbmQiLCJzb3J0IiwibGltaXQiLCJleGVjIiwicmVmbGVjdGlvbnMiLCJwb3N0IiwibWVzc2FnZSIsImJvZHkiLCJjb25zb2xlIiwibG9nIiwicmVmbGVjdGlvbiIsInNhdmUiLCJzYXZlZFJlZmxlY3Rpb24iLCJzdGF0dXMiLCJlcnJvciIsImVycm9ycyIsImZpbmRCeUlkIiwicGFyYW1zIiwiaWQiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBQ0E7QUFDQSxJQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxTQUFaLElBQXlCLDJCQUExQzs7QUFDQUMscUJBQVNDLE9BQVQsQ0FBaUJMLFFBQWpCLEVBQTJCO0FBQUVNLEVBQUFBLGVBQWUsRUFBRSxJQUFuQjtBQUF5QkMsRUFBQUEsa0JBQWtCLEVBQUU7QUFBN0MsQ0FBM0I7O0FBQ0FILHFCQUFTSSxPQUFULEdBQW1CQSxPQUFuQjs7QUFDQSxJQUFNQyxVQUFVLEdBQUdMLHFCQUFTTSxLQUFULENBQWUsWUFBZixFQUE2QjtBQUM5Q0MsRUFBQUEsUUFBUSxFQUFFO0FBQ1JDLElBQUFBLElBQUksRUFBRUM7QUFERSxHQURvQztBQUk5Q0MsRUFBQUEsUUFBUSxFQUFFO0FBQ1JGLElBQUFBLElBQUksRUFBRUM7QUFERSxHQUpvQztBQU85Q0UsRUFBQUEsUUFBUSxFQUFFO0FBQ1JILElBQUFBLElBQUksRUFBRUM7QUFERSxHQVBvQztBQVU5Q0csRUFBQUEsUUFBUSxFQUFFO0FBQ1JKLElBQUFBLElBQUksRUFBRUM7QUFERSxHQVZvQztBQWE5Q0ksRUFBQUEsUUFBUSxFQUFFO0FBQ1JMLElBQUFBLElBQUksRUFBRUM7QUFERSxHQWJvQztBQWdCOUNLLEVBQUFBLFFBQVEsRUFBRTtBQUNSTixJQUFBQSxJQUFJLEVBQUVDO0FBREUsR0FoQm9DO0FBbUI5Q00sRUFBQUEsYUFBYSxFQUFFO0FBQ2JQLElBQUFBLElBQUksRUFBRUMsTUFETztBQUViTyxJQUFBQSxTQUFTLEVBQUUsQ0FGRTtBQUdiQyxJQUFBQSxTQUFTLEVBQUU7QUFIRSxHQW5CK0I7QUF3QjlDQyxFQUFBQSxlQUFlLEVBQUU7QUFDZlYsSUFBQUEsSUFBSSxFQUFFQyxNQURTO0FBRWZPLElBQUFBLFNBQVMsRUFBRSxDQUZJO0FBR2ZDLElBQUFBLFNBQVMsRUFBRTtBQUhJLEdBeEI2QjtBQTZCOUNFLEVBQUFBLGtCQUFrQixFQUFFO0FBQ2xCWCxJQUFBQSxJQUFJLEVBQUVDLE1BRFk7QUFFbEJPLElBQUFBLFNBQVMsRUFBRSxDQUZPO0FBR2xCQyxJQUFBQSxTQUFTLEVBQUU7QUFITyxHQTdCMEI7QUFrQzlDRyxFQUFBQSxrQkFBa0IsRUFBRTtBQUNsQlosSUFBQUEsSUFBSSxFQUFFQyxNQURZO0FBRWxCTyxJQUFBQSxTQUFTLEVBQUUsQ0FGTztBQUdsQkMsSUFBQUEsU0FBUyxFQUFFO0FBSE8sR0FsQzBCO0FBdUM5Q0ksRUFBQUEsU0FBUyxFQUFFO0FBQ1RiLElBQUFBLElBQUksRUFBRWMsSUFERztBQUVULGVBQVNBLElBQUksQ0FBQ0M7QUFGTDtBQXZDbUMsQ0FBN0IsQ0FBbkI7O0FBNENBLElBQU1DLElBQUksR0FBRzNCLE9BQU8sQ0FBQ0MsR0FBUixDQUFZMkIsSUFBWixJQUFvQixJQUFqQyxDLENBQ0E7O0FBQ0EsSUFBTUMsR0FBRyxHQUFHLDBCQUFaO0FBQ0FBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLHVCQUFSO0FBQ0FELEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyx1QkFBV0MsSUFBWCxFQUFSO0FBQ0FILEdBQUcsQ0FBQ0ksR0FBSixDQUFRLEdBQVI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDBCQUFhLGlCQUFPQyxHQUFQLEVBQVlDLEdBQVo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFDZTNCLFVBQVUsQ0FBQzRCLElBQVgsR0FBa0JDLElBQWxCLENBQXVCO0FBQUNiLGNBQUFBLFNBQVMsRUFBRTtBQUFaLGFBQXZCLEVBQTRDYyxLQUE1QyxDQUFrRCxHQUFsRCxFQUF1REMsSUFBdkQsRUFEZjs7QUFBQTtBQUNMQyxZQUFBQSxXQURLO0FBRVhMLFlBQUFBLEdBQUcsQ0FBQ0gsSUFBSixDQUFTUSxXQUFUOztBQUZXO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQWI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFJQVgsR0FBRyxDQUFDWSxJQUFKLENBQVMsR0FBVDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMEJBQWMsa0JBQU9QLEdBQVAsRUFBWUMsR0FBWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDTE8sWUFBQUEsT0FESyxHQUNNUixHQUFHLENBQUNTLElBRFYsQ0FDTEQsT0FESztBQUVaRSxZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVgsR0FBRyxDQUFDUyxJQUFoQjtBQUNNRyxZQUFBQSxVQUhNLEdBR08sSUFBSXRDLFVBQUosQ0FBZTBCLEdBQUcsQ0FBQ1MsSUFBbkIsQ0FIUDtBQUFBO0FBQUE7QUFBQSxtQkFLb0JHLFVBQVUsQ0FBQ0MsSUFBWCxFQUxwQjs7QUFBQTtBQUtKQyxZQUFBQSxlQUxJO0FBTVZiLFlBQUFBLEdBQUcsQ0FBQ2MsTUFBSixDQUFXLEdBQVgsRUFBZ0JqQixJQUFoQixDQUFxQmdCLGVBQXJCO0FBTlU7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFRVmIsWUFBQUEsR0FBRyxDQUFDYyxNQUFKLENBQVcsR0FBWCxFQUFnQmpCLElBQWhCLENBQXFCO0FBQUNVLGNBQUFBLE9BQU8sRUFBRSxnQ0FBVjtBQUE0Q1EsY0FBQUEsS0FBSyxFQUFFLGFBQUlDO0FBQXZELGFBQXJCOztBQVJVO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQWQ7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFXQXRCLEdBQUcsQ0FBQ0ksR0FBSixDQUFRLGtCQUFSO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwwQkFBNEIsa0JBQU9DLEdBQVAsRUFBWUMsR0FBWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNEM0IsVUFBVSxDQUFDNEMsUUFBWCxDQUFvQmxCLEdBQUcsQ0FBQ21CLE1BQUosQ0FBV0MsRUFBL0IsQ0FEQzs7QUFBQTtBQUNwQlIsWUFBQUEsVUFEb0I7O0FBRTFCLGdCQUFJQSxVQUFKLEVBQWdCO0FBQ2RYLGNBQUFBLEdBQUcsQ0FBQ0gsSUFBSixDQUFTYyxVQUFUO0FBQ0QsYUFGRCxNQUVPO0FBQ0xYLGNBQUFBLEdBQUcsQ0FBQ2MsTUFBSixDQUFXLEdBQVgsRUFBZ0JqQixJQUFoQixDQUFxQjtBQUFFa0IsZ0JBQUFBLEtBQUssRUFBRTtBQUFULGVBQXJCO0FBQ0Q7O0FBTnlCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQTVCOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBUUFyQixHQUFHLENBQUMwQixNQUFKLENBQVc1QixJQUFYLEVBQWlCLFlBQU07QUFDckJpQixFQUFBQSxPQUFPLENBQUNDLEdBQVIsOENBQWtEbEIsSUFBbEQ7QUFDRCxDQUZEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy90aGVyZXNhdWx3YWhuL0Rlc2t0b3AvbXlkYXkvYmFja2VuZCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnXHJcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJ1xyXG5pbXBvcnQgY29ycyBmcm9tICdjb3JzJ1xyXG5pbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnXHJcbi8vIGNvbnN0IG1vbmdvVXJsID0gcHJvY2Vzcy5lbnYuTU9OR09fVVJMIHx8ICdtb25nb2RiOi8vbG9jYWxob3N0L215ZGF5J1xyXG5jb25zdCBtb25nb1VybCA9IHByb2Nlc3MuZW52Lk1PTkdPX1VSTCB8fCAnbW9uZ29kYjovL2xvY2FsaG9zdC9teWRheSdcclxubW9uZ29vc2UuY29ubmVjdChtb25nb1VybCwgeyB1c2VOZXdVcmxQYXJzZXI6IHRydWUsIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSB9KVxyXG5tb25nb29zZS5Qcm9taXNlID0gUHJvbWlzZVxyXG5jb25zdCBSZWZsZWN0aW9uID0gbW9uZ29vc2UubW9kZWwoJ1JlZmxlY3Rpb24nLCB7XHJcbiAgZmVlbGluZzE6IHsgXHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgfSxcclxuICBmZWVsaW5nMjogeyBcclxuICAgIHR5cGU6IFN0cmluZyxcclxuICB9LFxyXG4gIGZlZWxpbmczOiB7IFxyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gIH0sXHJcbiAgZmVlbGluZzQ6IHsgXHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgfSxcclxuICBmZWVsaW5nNTogeyBcclxuICAgIHR5cGU6IFN0cmluZyxcclxuICB9LFxyXG4gIGZlZWxpbmc2OiB7IFxyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gIH0sXHJcbiAgbWVzc2FnZVBlb3BsZToge1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgbWlubGVuZ3RoOiAxLFxyXG4gICAgbWF4bGVuZ3RoOiAxNDBcclxuICB9LFxyXG4gIG1lc3NhZ2VHcmF0ZWZ1bDoge1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgbWlubGVuZ3RoOiAxLFxyXG4gICAgbWF4bGVuZ3RoOiAxNDBcclxuICB9LFxyXG4gIG1lc3NhZ2VMb29rRm9yd2FyZDoge1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgbWlubGVuZ3RoOiAxLFxyXG4gICAgbWF4bGVuZ3RoOiAxNDBcclxuICB9LFxyXG4gIG1lc3NhZ2VSZWZsZWN0aW9uczoge1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgbWlubGVuZ3RoOiAxLFxyXG4gICAgbWF4bGVuZ3RoOiAxNDBcclxuICB9LFxyXG4gIGNyZWF0ZWRBdDoge1xyXG4gICAgdHlwZTogRGF0ZSxcclxuICAgIGRlZmF1bHQ6IERhdGUubm93XHJcbiAgfVxyXG59KVxyXG5jb25zdCBwb3J0ID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA5MDAwXHJcbi8vIGNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDgwODBcclxuY29uc3QgYXBwID0gZXhwcmVzcygpXHJcbmFwcC51c2UoY29ycygpKVxyXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKVxyXG5hcHAuZ2V0KCcvJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3QgcmVmbGVjdGlvbnMgPSBhd2FpdCBSZWZsZWN0aW9uLmZpbmQoKS5zb3J0KHtjcmVhdGVkQXQ6ICdkZXNjJ30pLmxpbWl0KDE0MCkuZXhlYygpXHJcbiAgcmVzLmpzb24ocmVmbGVjdGlvbnMpXHJcbn0pXHJcbmFwcC5wb3N0KCcvJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3Qge21lc3NhZ2V9ID0gcmVxLmJvZHlcclxuICBjb25zb2xlLmxvZyhyZXEuYm9keSlcclxuICBjb25zdCByZWZsZWN0aW9uID0gbmV3IFJlZmxlY3Rpb24ocmVxLmJvZHkpXHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHNhdmVkUmVmbGVjdGlvbiA9IGF3YWl0IHJlZmxlY3Rpb24uc2F2ZSgpXHJcbiAgICByZXMuc3RhdHVzKDIwMSkuanNvbihzYXZlZFJlZmxlY3Rpb24pXHJcbiAgfWNhdGNoIChlcnIpIHtcclxuICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHttZXNzYWdlOiAnQ291bGQgbm90IHNhdmUgeW91ciByZWZsZWN0aW9uJywgZXJyb3I6IGVyci5lcnJvcnN9KSBcclxuICB9XHJcbn0pXHJcbmFwcC5nZXQoJy9yZWZsZWN0aW9ucy86aWQnLCBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICBjb25zdCByZWZsZWN0aW9uID0gYXdhaXQgUmVmbGVjdGlvbi5maW5kQnlJZChyZXEucGFyYW1zLmlkKVxyXG4gIGlmIChyZWZsZWN0aW9uKSB7XHJcbiAgICByZXMuanNvbihyZWZsZWN0aW9uKVxyXG4gIH0gZWxzZSB7XHJcbiAgICByZXMuc3RhdHVzKDQwNCkuanNvbih7IGVycm9yOiAnUmVmbGVjdGlvbiBub3QgZm91bmQnIH0pXHJcbiAgfVxyXG59KVxyXG5hcHAubGlzdGVuKHBvcnQsICgpID0+IHtcclxuICBjb25zb2xlLmxvZyhgU2VydmVyIHJ1bm5pbmcgb24gaHR0cDovL2xvY2FsaG9zdDoke3BvcnR9YClcclxufSkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "mongoUrl",
        "process",
        "env",
        "MONGO_URL",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "Promise",
        "Reflection",
        "model",
        "feeling1",
        "type",
        "String",
        "feeling2",
        "feeling3",
        "feeling4",
        "feeling5",
        "feeling6",
        "messagePeople",
        "minlength",
        "maxlength",
        "messageGrateful",
        "messageLookForward",
        "messageReflections",
        "createdAt",
        "Date",
        "now",
        "port",
        "PORT",
        "app",
        "use",
        "bodyParser",
        "json",
        "get",
        "req",
        "res",
        "find",
        "sort",
        "limit",
        "exec",
        "reflections",
        "post",
        "message",
        "body",
        "console",
        "log",
        "reflection",
        "save",
        "savedReflection",
        "status",
        "error",
        "errors",
        "findById",
        "params",
        "id",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/theresaulwahn/Desktop/myday/backend",
      "sourcesContent": [
        "import express from 'express'\r\nimport bodyParser from 'body-parser'\r\nimport cors from 'cors'\r\nimport mongoose from 'mongoose'\r\n// const mongoUrl = process.env.MONGO_URL || 'mongodb://localhost/myday'\r\nconst mongoUrl = process.env.MONGO_URL || 'mongodb://localhost/myday'\r\nmongoose.connect(mongoUrl, { useNewUrlParser: true, useUnifiedTopology: true })\r\nmongoose.Promise = Promise\r\nconst Reflection = mongoose.model('Reflection', {\r\n  feeling1: { \r\n    type: String,\r\n  },\r\n  feeling2: { \r\n    type: String,\r\n  },\r\n  feeling3: { \r\n    type: String,\r\n  },\r\n  feeling4: { \r\n    type: String,\r\n  },\r\n  feeling5: { \r\n    type: String,\r\n  },\r\n  feeling6: { \r\n    type: String,\r\n  },\r\n  messagePeople: {\r\n    type: String,\r\n    minlength: 1,\r\n    maxlength: 140\r\n  },\r\n  messageGrateful: {\r\n    type: String,\r\n    minlength: 1,\r\n    maxlength: 140\r\n  },\r\n  messageLookForward: {\r\n    type: String,\r\n    minlength: 1,\r\n    maxlength: 140\r\n  },\r\n  messageReflections: {\r\n    type: String,\r\n    minlength: 1,\r\n    maxlength: 140\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    default: Date.now\r\n  }\r\n})\r\nconst port = process.env.PORT || 9000\r\n// const port = process.env.PORT || 8080\r\nconst app = express()\r\napp.use(cors())\r\napp.use(bodyParser.json())\r\napp.get('/', async (req, res) => {\r\n  const reflections = await Reflection.find().sort({createdAt: 'desc'}).limit(140).exec()\r\n  res.json(reflections)\r\n})\r\napp.post('/', async (req, res) => {\r\n  const {message} = req.body\r\n  console.log(req.body)\r\n  const reflection = new Reflection(req.body)\r\n  try {\r\n    const savedReflection = await reflection.save()\r\n    res.status(201).json(savedReflection)\r\n  }catch (err) {\r\n    res.status(400).json({message: 'Could not save your reflection', error: err.errors}) \r\n  }\r\n})\r\napp.get('/reflections/:id', async (req, res) => {\r\n  const reflection = await Reflection.findById(req.params.id)\r\n  if (reflection) {\r\n    res.json(reflection)\r\n  } else {\r\n    res.status(404).json({ error: 'Reflection not found' })\r\n  }\r\n})\r\napp.listen(port, () => {\r\n  console.log(`Server running on http://localhost:${port}`)\r\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1586530915795
  }
}