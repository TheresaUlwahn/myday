{
  "{\"sourceRoot\":\"/Users/theresaulwahn/Desktop/myday/backend\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/theresaulwahn/Desktop/myday/backend\",\"filename\":\"/Users/theresaulwahn/Desktop/myday/backend/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/theresaulwahn/Desktop/myday/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/theresaulwahn/Desktop/myday/backend",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/theresaulwahn/Desktop/myday/backend",
      "filename": "/Users/theresaulwahn/Desktop/myday/backend/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/theresaulwahn/Desktop/myday/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/theresaulwahn/Desktop/myday/backend/server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/theresaulwahn/Desktop/myday/backend/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/theresaulwahn/Desktop/myday/backend",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar mongoUrl = process.env.MONGO_URL || 'mongodb://localhost/myday';\n\n_mongoose[\"default\"].connect(mongoUrl, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\n_mongoose[\"default\"].Promise = Promise;\n\nvar Reflection = _mongoose[\"default\"].model('Reflection', {\n  message: {\n    type: String,\n    required: true,\n    minlength: 5,\n    maxlength: 140\n  },\n  // checkbox: { \n  //   type: String,\n  //   // required: true,\n  //   enum: ['Happy', 'Worried', 'Strong', 'Sad'],\n  //   placeholder: 'Text',\n  //   forceField: 'checkbox'\n  // })\n  // hearts: {\n  //   type: Number,\n  //   default: 0\n  // },\n  createdAt: {\n    type: Date,\n    \"default\": Date.now\n  }\n}); // Defines the port the app will run on. Defaults to 8080, but can be \n// overridden when starting the server. For example:\n//\n//   PORT=9000 npm start\n\n\nvar port = process.env.PORT || 9000;\nvar app = (0, _express[\"default\"])(); // Add middlewares to enable cors and json body parsing\n\napp.use((0, _cors[\"default\"])());\napp.use(_bodyParser[\"default\"].json()); // Start defining your routes here\n\napp.get('/', function (req, res) {\n  res.send('Hello world');\n}); //Theresa added down below from 51-55\n\napp.get('/',\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var reflections;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Reflection.find().sort({\n              createdAt: 'desc'\n            }).limit(140).exec();\n\n          case 2:\n            reflections = _context.sent;\n            res.json(reflections);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.post('/',\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var message, reflection, savedReflection;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            //Retrieve the information sent by the client to our API endpoint\n            message = req.body.message; //Use our mongoose model to create the database entry\n\n            reflection = new Reflection({\n              message: message\n            });\n            _context2.prev = 2;\n            _context2.next = 5;\n            return reflection.save();\n\n          case 5:\n            savedReflection = _context2.sent;\n            res.status(201).json(savedReflection);\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](2);\n            res.status(400).json({\n              message: 'Could not save your reflection',\n              error: _context2.t0.errors\n            });\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 9]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}()); // app.post('/reflection', async (req, res) => {\n//     const reflection = new Reflection({ message }) // removed checkbox allt här som ska sparas\n//     const savedReflection = await reflection.save()\n//     res.status(201).json(savedReflection)\n// })\n// hej hej //\n// Start the server\n\napp.listen(port, function () {\n  console.log(\"Server running on http://localhost:\".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJtb25nb1VybCIsInByb2Nlc3MiLCJlbnYiLCJNT05HT19VUkwiLCJtb25nb29zZSIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJQcm9taXNlIiwiUmVmbGVjdGlvbiIsIm1vZGVsIiwibWVzc2FnZSIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsIm1pbmxlbmd0aCIsIm1heGxlbmd0aCIsImNyZWF0ZWRBdCIsIkRhdGUiLCJub3ciLCJwb3J0IiwiUE9SVCIsImFwcCIsInVzZSIsImJvZHlQYXJzZXIiLCJqc29uIiwiZ2V0IiwicmVxIiwicmVzIiwic2VuZCIsImZpbmQiLCJzb3J0IiwibGltaXQiLCJleGVjIiwicmVmbGVjdGlvbnMiLCJwb3N0IiwiYm9keSIsInJlZmxlY3Rpb24iLCJzYXZlIiwic2F2ZWRSZWZsZWN0aW9uIiwic3RhdHVzIiwiZXJyb3IiLCJlcnJvcnMiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7OztBQUVBLElBQU1BLFFBQVEsR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFNBQVosSUFBeUIsMkJBQTFDOztBQUNBQyxxQkFBU0MsT0FBVCxDQUFpQkwsUUFBakIsRUFBMkI7QUFBRU0sRUFBQUEsZUFBZSxFQUFFLElBQW5CO0FBQXlCQyxFQUFBQSxrQkFBa0IsRUFBRTtBQUE3QyxDQUEzQjs7QUFDQUgscUJBQVNJLE9BQVQsR0FBbUJBLE9BQW5COztBQUVBLElBQU1DLFVBQVUsR0FBR0wscUJBQVNNLEtBQVQsQ0FBZSxZQUFmLEVBQTZCO0FBQzlDQyxFQUFBQSxPQUFPLEVBQUU7QUFDUEMsSUFBQUEsSUFBSSxFQUFFQyxNQURDO0FBRVBDLElBQUFBLFFBQVEsRUFBRSxJQUZIO0FBR1BDLElBQUFBLFNBQVMsRUFBRSxDQUhKO0FBSVBDLElBQUFBLFNBQVMsRUFBRTtBQUpKLEdBRHFDO0FBUTlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVGO0FBRUU7QUFDQTtBQUNBO0FBQ0E7QUFDQUMsRUFBQUEsU0FBUyxFQUFFO0FBQ1RMLElBQUFBLElBQUksRUFBRU0sSUFERztBQUVULGVBQVNBLElBQUksQ0FBQ0M7QUFGTDtBQXJCbUMsQ0FBN0IsQ0FBbkIsQyxDQTBCQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EsSUFBTUMsSUFBSSxHQUFHbkIsT0FBTyxDQUFDQyxHQUFSLENBQVltQixJQUFaLElBQW9CLElBQWpDO0FBQ0EsSUFBTUMsR0FBRyxHQUFHLDBCQUFaLEMsQ0FFQTs7QUFDQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsdUJBQVI7QUFDQUQsR0FBRyxDQUFDQyxHQUFKLENBQVFDLHVCQUFXQyxJQUFYLEVBQVIsRSxDQUVBOztBQUNBSCxHQUFHLENBQUNJLEdBQUosQ0FBUSxHQUFSLEVBQWEsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDekJBLEVBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTLGFBQVQ7QUFDRCxDQUZELEUsQ0FJQTs7QUFDQVAsR0FBRyxDQUFDSSxHQUFKLENBQVEsR0FBUjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMEJBQWEsaUJBQU9DLEdBQVAsRUFBWUMsR0FBWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNlbkIsVUFBVSxDQUFDcUIsSUFBWCxHQUFrQkMsSUFBbEIsQ0FBdUI7QUFBQ2QsY0FBQUEsU0FBUyxFQUFFO0FBQVosYUFBdkIsRUFBNENlLEtBQTVDLENBQWtELEdBQWxELEVBQXVEQyxJQUF2RCxFQURmOztBQUFBO0FBQ0xDLFlBQUFBLFdBREs7QUFFWE4sWUFBQUEsR0FBRyxDQUFDSCxJQUFKLENBQVNTLFdBQVQ7O0FBRlc7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBYjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUtBWixHQUFHLENBQUNhLElBQUosQ0FBUyxHQUFUO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwwQkFBYyxrQkFBT1IsR0FBUCxFQUFZQyxHQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNaO0FBQ09qQixZQUFBQSxPQUZLLEdBRU1nQixHQUFHLENBQUNTLElBRlYsQ0FFTHpCLE9BRkssRUFJWjs7QUFDTTBCLFlBQUFBLFVBTE0sR0FLTyxJQUFJNUIsVUFBSixDQUFlO0FBQUNFLGNBQUFBLE9BQU8sRUFBUEE7QUFBRCxhQUFmLENBTFA7QUFBQTtBQUFBO0FBQUEsbUJBU29CMEIsVUFBVSxDQUFDQyxJQUFYLEVBVHBCOztBQUFBO0FBU0pDLFlBQUFBLGVBVEk7QUFVVlgsWUFBQUEsR0FBRyxDQUFDWSxNQUFKLENBQVcsR0FBWCxFQUFnQmYsSUFBaEIsQ0FBcUJjLGVBQXJCO0FBVlU7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFZVlgsWUFBQUEsR0FBRyxDQUFDWSxNQUFKLENBQVcsR0FBWCxFQUFnQmYsSUFBaEIsQ0FBcUI7QUFBQ2QsY0FBQUEsT0FBTyxFQUFFLGdDQUFWO0FBQTRDOEIsY0FBQUEsS0FBSyxFQUFFLGFBQUlDO0FBQXZELGFBQXJCOztBQVpVO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQWQ7O0FBQUE7QUFBQTtBQUFBO0FBQUEsSyxDQWdCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTs7QUFDQXBCLEdBQUcsQ0FBQ3FCLE1BQUosQ0FBV3ZCLElBQVgsRUFBaUIsWUFBTTtBQUNyQndCLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUiw4Q0FBa0R6QixJQUFsRDtBQUNELENBRkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL3RoZXJlc2F1bHdhaG4vRGVza3RvcC9teWRheS9iYWNrZW5kIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcydcclxuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInXHJcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnXHJcbmltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSdcclxuXHJcbmNvbnN0IG1vbmdvVXJsID0gcHJvY2Vzcy5lbnYuTU9OR09fVVJMIHx8ICdtb25nb2RiOi8vbG9jYWxob3N0L215ZGF5J1xyXG5tb25nb29zZS5jb25uZWN0KG1vbmdvVXJsLCB7IHVzZU5ld1VybFBhcnNlcjogdHJ1ZSwgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlIH0pXHJcbm1vbmdvb3NlLlByb21pc2UgPSBQcm9taXNlXHJcblxyXG5jb25zdCBSZWZsZWN0aW9uID0gbW9uZ29vc2UubW9kZWwoJ1JlZmxlY3Rpb24nLCB7XHJcbiAgbWVzc2FnZToge1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICBtaW5sZW5ndGg6IDUsXHJcbiAgICBtYXhsZW5ndGg6IDE0MFxyXG4gIH0sXHJcblxyXG4gIC8vIGNoZWNrYm94OiB7IFxyXG4gIC8vICAgdHlwZTogU3RyaW5nLFxyXG4gIC8vICAgLy8gcmVxdWlyZWQ6IHRydWUsXHJcbiAgLy8gICBlbnVtOiBbJ0hhcHB5JywgJ1dvcnJpZWQnLCAnU3Ryb25nJywgJ1NhZCddLFxyXG4gIC8vICAgcGxhY2Vob2xkZXI6ICdUZXh0JyxcclxuICAvLyAgIGZvcmNlRmllbGQ6ICdjaGVja2JveCdcclxuICBcclxuLy8gfSlcclxuXHJcbiAgLy8gaGVhcnRzOiB7XHJcbiAgLy8gICB0eXBlOiBOdW1iZXIsXHJcbiAgLy8gICBkZWZhdWx0OiAwXHJcbiAgLy8gfSxcclxuICBjcmVhdGVkQXQ6IHtcclxuICAgIHR5cGU6IERhdGUsXHJcbiAgICBkZWZhdWx0OiBEYXRlLm5vd1xyXG4gIH1cclxufSlcclxuLy8gRGVmaW5lcyB0aGUgcG9ydCB0aGUgYXBwIHdpbGwgcnVuIG9uLiBEZWZhdWx0cyB0byA4MDgwLCBidXQgY2FuIGJlIFxyXG4vLyBvdmVycmlkZGVuIHdoZW4gc3RhcnRpbmcgdGhlIHNlcnZlci4gRm9yIGV4YW1wbGU6XHJcbi8vXHJcbi8vICAgUE9SVD05MDAwIG5wbSBzdGFydFxyXG5jb25zdCBwb3J0ID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA5MDAwXHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKVxyXG5cclxuLy8gQWRkIG1pZGRsZXdhcmVzIHRvIGVuYWJsZSBjb3JzIGFuZCBqc29uIGJvZHkgcGFyc2luZ1xyXG5hcHAudXNlKGNvcnMoKSlcclxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSlcclxuXHJcbi8vIFN0YXJ0IGRlZmluaW5nIHlvdXIgcm91dGVzIGhlcmVcclxuYXBwLmdldCgnLycsIChyZXEsIHJlcykgPT4ge1xyXG4gIHJlcy5zZW5kKCdIZWxsbyB3b3JsZCcpXHJcbn0pXHJcblxyXG4vL1RoZXJlc2EgYWRkZWQgZG93biBiZWxvdyBmcm9tIDUxLTU1XHJcbmFwcC5nZXQoJy8nLCBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICBjb25zdCByZWZsZWN0aW9ucyA9IGF3YWl0IFJlZmxlY3Rpb24uZmluZCgpLnNvcnQoe2NyZWF0ZWRBdDogJ2Rlc2MnfSkubGltaXQoMTQwKS5leGVjKClcclxuICByZXMuanNvbihyZWZsZWN0aW9ucylcclxufSlcclxuXHJcbmFwcC5wb3N0KCcvJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgLy9SZXRyaWV2ZSB0aGUgaW5mb3JtYXRpb24gc2VudCBieSB0aGUgY2xpZW50IHRvIG91ciBBUEkgZW5kcG9pbnRcclxuICBjb25zdCB7bWVzc2FnZX0gPSByZXEuYm9keVxyXG5cclxuICAvL1VzZSBvdXIgbW9uZ29vc2UgbW9kZWwgdG8gY3JlYXRlIHRoZSBkYXRhYmFzZSBlbnRyeVxyXG4gIGNvbnN0IHJlZmxlY3Rpb24gPSBuZXcgUmVmbGVjdGlvbih7bWVzc2FnZX0pXHJcblxyXG4gIHRyeSB7XHJcbiAgICAvL1N1Y2Nlc3NcclxuICAgIGNvbnN0IHNhdmVkUmVmbGVjdGlvbiA9IGF3YWl0IHJlZmxlY3Rpb24uc2F2ZSgpXHJcbiAgICByZXMuc3RhdHVzKDIwMSkuanNvbihzYXZlZFJlZmxlY3Rpb24pXHJcbiAgfWNhdGNoIChlcnIpIHtcclxuICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHttZXNzYWdlOiAnQ291bGQgbm90IHNhdmUgeW91ciByZWZsZWN0aW9uJywgZXJyb3I6IGVyci5lcnJvcnN9KSBcclxuICB9XHJcbn0pXHJcblxyXG4vLyBhcHAucG9zdCgnL3JlZmxlY3Rpb24nLCBhc3luYyAocmVxLCByZXMpID0+IHtcclxuLy8gICAgIGNvbnN0IHJlZmxlY3Rpb24gPSBuZXcgUmVmbGVjdGlvbih7IG1lc3NhZ2UgfSkgLy8gcmVtb3ZlZCBjaGVja2JveCBhbGx0IGjDpHIgc29tIHNrYSBzcGFyYXNcclxuLy8gICAgIGNvbnN0IHNhdmVkUmVmbGVjdGlvbiA9IGF3YWl0IHJlZmxlY3Rpb24uc2F2ZSgpXHJcbi8vICAgICByZXMuc3RhdHVzKDIwMSkuanNvbihzYXZlZFJlZmxlY3Rpb24pXHJcbi8vIH0pXHJcblxyXG4vLyBoZWogaGVqIC8vXHJcblxyXG4vLyBTdGFydCB0aGUgc2VydmVyXHJcbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4ge1xyXG4gIGNvbnNvbGUubG9nKGBTZXJ2ZXIgcnVubmluZyBvbiBodHRwOi8vbG9jYWxob3N0OiR7cG9ydH1gKVxyXG59KVxyXG5cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "mongoUrl",
        "process",
        "env",
        "MONGO_URL",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "Promise",
        "Reflection",
        "model",
        "message",
        "type",
        "String",
        "required",
        "minlength",
        "maxlength",
        "createdAt",
        "Date",
        "now",
        "port",
        "PORT",
        "app",
        "use",
        "bodyParser",
        "json",
        "get",
        "req",
        "res",
        "send",
        "find",
        "sort",
        "limit",
        "exec",
        "reflections",
        "post",
        "body",
        "reflection",
        "save",
        "savedReflection",
        "status",
        "error",
        "errors",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,SAAZ,IAAyB,2BAA1C;;AACAC,qBAASC,OAAT,CAAiBL,QAAjB,EAA2B;AAAEM,EAAAA,eAAe,EAAE,IAAnB;AAAyBC,EAAAA,kBAAkB,EAAE;AAA7C,CAA3B;;AACAH,qBAASI,OAAT,GAAmBA,OAAnB;;AAEA,IAAMC,UAAU,GAAGL,qBAASM,KAAT,CAAe,YAAf,EAA6B;AAC9CC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEC,MADC;AAEPC,IAAAA,QAAQ,EAAE,IAFH;AAGPC,IAAAA,SAAS,EAAE,CAHJ;AAIPC,IAAAA,SAAS,EAAE;AAJJ,GADqC;AAQ9C;AACA;AACA;AACA;AACA;AACA;AAEF;AAEE;AACA;AACA;AACA;AACAC,EAAAA,SAAS,EAAE;AACTL,IAAAA,IAAI,EAAEM,IADG;AAET,eAASA,IAAI,CAACC;AAFL;AArBmC,CAA7B,CAAnB,C,CA0BA;AACA;AACA;AACA;;;AACA,IAAMC,IAAI,GAAGnB,OAAO,CAACC,GAAR,CAAYmB,IAAZ,IAAoB,IAAjC;AACA,IAAMC,GAAG,GAAG,0BAAZ,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQ,uBAAR;AACAD,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,IAAX,EAAR,E,CAEA;;AACAH,GAAG,CAACI,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,aAAT;AACD,CAFD,E,CAIA;;AACAP,GAAG,CAACI,GAAJ,CAAQ,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAa,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACenB,UAAU,CAACqB,IAAX,GAAkBC,IAAlB,CAAuB;AAACd,cAAAA,SAAS,EAAE;AAAZ,aAAvB,EAA4Ce,KAA5C,CAAkD,GAAlD,EAAuDC,IAAvD,EADf;;AAAA;AACLC,YAAAA,WADK;AAEXN,YAAAA,GAAG,CAACH,IAAJ,CAASS,WAAT;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA;AAKAZ,GAAG,CAACa,IAAJ,CAAS,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAc,kBAAOR,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACZ;AACOjB,YAAAA,OAFK,GAEMgB,GAAG,CAACS,IAFV,CAELzB,OAFK,EAIZ;;AACM0B,YAAAA,UALM,GAKO,IAAI5B,UAAJ,CAAe;AAACE,cAAAA,OAAO,EAAPA;AAAD,aAAf,CALP;AAAA;AAAA;AAAA,mBASoB0B,UAAU,CAACC,IAAX,EATpB;;AAAA;AASJC,YAAAA,eATI;AAUVX,YAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBf,IAAhB,CAAqBc,eAArB;AAVU;AAAA;;AAAA;AAAA;AAAA;AAYVX,YAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBf,IAAhB,CAAqB;AAACd,cAAAA,OAAO,EAAE,gCAAV;AAA4C8B,cAAAA,KAAK,EAAE,aAAIC;AAAvD,aAArB;;AAZU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAAA;AAAA;AAAA;AAAA,K,CAgBA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AACApB,GAAG,CAACqB,MAAJ,CAAWvB,IAAX,EAAiB,YAAM;AACrBwB,EAAAA,OAAO,CAACC,GAAR,8CAAkDzB,IAAlD;AACD,CAFD",
      "sourceRoot": "/Users/theresaulwahn/Desktop/myday/backend",
      "sourcesContent": [
        "import express from 'express'\r\nimport bodyParser from 'body-parser'\r\nimport cors from 'cors'\r\nimport mongoose from 'mongoose'\r\n\r\nconst mongoUrl = process.env.MONGO_URL || 'mongodb://localhost/myday'\r\nmongoose.connect(mongoUrl, { useNewUrlParser: true, useUnifiedTopology: true })\r\nmongoose.Promise = Promise\r\n\r\nconst Reflection = mongoose.model('Reflection', {\r\n  message: {\r\n    type: String,\r\n    required: true,\r\n    minlength: 5,\r\n    maxlength: 140\r\n  },\r\n\r\n  // checkbox: { \r\n  //   type: String,\r\n  //   // required: true,\r\n  //   enum: ['Happy', 'Worried', 'Strong', 'Sad'],\r\n  //   placeholder: 'Text',\r\n  //   forceField: 'checkbox'\r\n  \r\n// })\r\n\r\n  // hearts: {\r\n  //   type: Number,\r\n  //   default: 0\r\n  // },\r\n  createdAt: {\r\n    type: Date,\r\n    default: Date.now\r\n  }\r\n})\r\n// Defines the port the app will run on. Defaults to 8080, but can be \r\n// overridden when starting the server. For example:\r\n//\r\n//   PORT=9000 npm start\r\nconst port = process.env.PORT || 9000\r\nconst app = express()\r\n\r\n// Add middlewares to enable cors and json body parsing\r\napp.use(cors())\r\napp.use(bodyParser.json())\r\n\r\n// Start defining your routes here\r\napp.get('/', (req, res) => {\r\n  res.send('Hello world')\r\n})\r\n\r\n//Theresa added down below from 51-55\r\napp.get('/', async (req, res) => {\r\n  const reflections = await Reflection.find().sort({createdAt: 'desc'}).limit(140).exec()\r\n  res.json(reflections)\r\n})\r\n\r\napp.post('/', async (req, res) => {\r\n  //Retrieve the information sent by the client to our API endpoint\r\n  const {message} = req.body\r\n\r\n  //Use our mongoose model to create the database entry\r\n  const reflection = new Reflection({message})\r\n\r\n  try {\r\n    //Success\r\n    const savedReflection = await reflection.save()\r\n    res.status(201).json(savedReflection)\r\n  }catch (err) {\r\n    res.status(400).json({message: 'Could not save your reflection', error: err.errors}) \r\n  }\r\n})\r\n\r\n// app.post('/reflection', async (req, res) => {\r\n//     const reflection = new Reflection({ message }) // removed checkbox allt här som ska sparas\r\n//     const savedReflection = await reflection.save()\r\n//     res.status(201).json(savedReflection)\r\n// })\r\n\r\n// hej hej //\r\n\r\n// Start the server\r\napp.listen(port, () => {\r\n  console.log(`Server running on http://localhost:${port}`)\r\n})\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583758393154
  }
}